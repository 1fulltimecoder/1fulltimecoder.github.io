<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>greedy on Samir Paul</title>
    <link>https://samirpaulb.github.io/tags/greedy/</link>
    <description>Recent content in greedy on Samir Paul</description>
    <image>
      <title>Samir Paul</title>
      <url>https://spcdn.pages.dev/blog-featured-image-samirpaul-in-blog.webp</url>
      <link>https://spcdn.pages.dev/blog-featured-image-samirpaul-in-blog.webp</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 20 Feb 2021 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://samirpaulb.github.io/tags/greedy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LeetCode Greedy for Beginners</title>
      <link>https://samirpaulb.github.io/posts/leetcode-greedy-for-beginners/</link>
      <pubDate>Sat, 20 Feb 2021 00:00:00 +0000</pubDate>
      <guid>https://samirpaulb.github.io/posts/leetcode-greedy-for-beginners/</guid>
      <description>LeetCode Greedy for Beginners</description>
      <content:encoded><![CDATA[<p>Greedy for practice:</p>
<p>Sharing good Greedy problems for practice:<br>
List: <a href="https://leetcode.com/list/xyehq5j6">https://leetcode.com/list/xyehq5j6</a></p>
<p><strong>Sort/Array</strong><br>
<a href="https://leetcode.com/problems/jump-game/">https://leetcode.com/problems/jump-game/</a><br>
<a href="https://leetcode.com/problems/jump-game-ii/">https://leetcode.com/problems/jump-game-ii/</a><br>
<a href="https://leetcode.com/problems/gas-station/">https://leetcode.com/problems/gas-station/</a><br>
<a href="https://leetcode.com/problems/candy/">https://leetcode.com/problems/candy/</a><br>
<a href="https://leetcode.com/problems/remove-k-digits/">https://leetcode.com/problems/remove-k-digits/</a><br>
<a href="https://leetcode.com/problems/wiggle-subsequence/">https://leetcode.com/problems/wiggle-subsequence/</a><br>
<a href="https://leetcode.com/problems/assign-cookies/">https://leetcode.com/problems/assign-cookies/</a><br>
<a href="https://leetcode.com/problems/boats-to-save-people/">https://leetcode.com/problems/boats-to-save-people/</a><br>
<a href="https://leetcode.com/problems/bag-of-tokens/">https://leetcode.com/problems/bag-of-tokens/</a><br>
<a href="https://leetcode.com/problems/number-of-burgers-with-no-waste-of-ingredients/">https://leetcode.com/problems/number-of-burgers-with-no-waste-of-ingredients/</a><br>
<a href="https://leetcode.com/problems/queue-reconstruction-by-height/">https://leetcode.com/problems/queue-reconstruction-by-height/</a><br>
<a href="https://leetcode.com/problems/play-with-chips/">https://leetcode.com/problems/play-with-chips/</a><br>
<a href="https://leetcode.com/problems/previous-permutation-with-one-swap/">https://leetcode.com/problems/previous-permutation-with-one-swap/</a><br>
<a href="https://leetcode.com/problems/lemonade-change/">https://leetcode.com/problems/lemonade-change/</a><br>
<a href="https://leetcode.com/problems/bag-of-tokens/">https://leetcode.com/problems/bag-of-tokens/</a></p>
<p><strong>Hash/Multi-set:</strong><br>
<a href="https://leetcode.com/problems/task-scheduler/">https://leetcode.com/problems/task-scheduler/</a><br>
<a href="https://leetcode.com/problems/partition-labels/">https://leetcode.com/problems/partition-labels/</a><br>
<a href="https://leetcode.com/problems/car-pooling/">https://leetcode.com/problems/car-pooling/</a><br>
<a href="https://leetcode.com/problems/divide-array-in-sets-of-k-consecutive-numbers/">https://leetcode.com/problems/divide-array-in-sets-of-k-consecutive-numbers/</a><br>
<a href="https://leetcode.com/problems/group-the-people-given-the-group-size-they-belong-to/">https://leetcode.com/problems/group-the-people-given-the-group-size-they-belong-to/</a><br>
<a href="https://leetcode.com/problems/cinema-seat-allocation/">https://leetcode.com/problems/cinema-seat-allocation/</a><br>
<a href="https://leetcode.com/problems/construct-k-palindrome-strings/">https://leetcode.com/problems/construct-k-palindrome-strings/</a><br>
<a href="https://leetcode.com/problems/advantage-shuffle/">https://leetcode.com/problems/advantage-shuffle/</a></p>
<p><strong>Strings:</strong><br>
<a href="https://leetcode.com/problems/reorganize-string/">https://leetcode.com/problems/reorganize-string/</a><br>
<a href="https://leetcode.com/problems/string-without-aaa-or-bbb/">https://leetcode.com/problems/string-without-aaa-or-bbb/</a><br>
<a href="https://leetcode.com/problems/check-if-a-string-can-break-another-string/">https://leetcode.com/problems/check-if-a-string-can-break-another-string/</a><br>
<a href="https://leetcode.com/problems/remove-duplicate-letters/">https://leetcode.com/problems/remove-duplicate-letters/</a></p>
<p><strong>Heap:</strong><br>
<a href="https://leetcode.com/problems/last-stone-weight/">https://leetcode.com/problems/last-stone-weight/</a><br>
<a href="https://leetcode.com/problems/reduce-array-size-to-the-half/">https://leetcode.com/problems/reduce-array-size-to-the-half/</a></p>
<p><strong>Stack:</strong><br>
<a href="https://leetcode.com/problems/minimum-add-to-make-parentheses-valid/">https://leetcode.com/problems/minimum-add-to-make-parentheses-valid/</a></p>
<p><strong>Sharing solutions for little tricky problems</strong>:</p>
<p><a href="https://leetcode.com/problems/divide-array-in-sets-of-k-consecutive-numbers/">https://leetcode.com/problems/divide-array-in-sets-of-k-consecutive-numbers/</a></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt" id="hl-0-1"><a class="lnlinks" href="#hl-0-1"> 1</a>
</span><span class="lnt" id="hl-0-2"><a class="lnlinks" href="#hl-0-2"> 2</a>
</span><span class="lnt" id="hl-0-3"><a class="lnlinks" href="#hl-0-3"> 3</a>
</span><span class="lnt" id="hl-0-4"><a class="lnlinks" href="#hl-0-4"> 4</a>
</span><span class="lnt" id="hl-0-5"><a class="lnlinks" href="#hl-0-5"> 5</a>
</span><span class="lnt" id="hl-0-6"><a class="lnlinks" href="#hl-0-6"> 6</a>
</span><span class="lnt" id="hl-0-7"><a class="lnlinks" href="#hl-0-7"> 7</a>
</span><span class="lnt" id="hl-0-8"><a class="lnlinks" href="#hl-0-8"> 8</a>
</span><span class="lnt" id="hl-0-9"><a class="lnlinks" href="#hl-0-9"> 9</a>
</span><span class="lnt" id="hl-0-10"><a class="lnlinks" href="#hl-0-10">10</a>
</span><span class="lnt" id="hl-0-11"><a class="lnlinks" href="#hl-0-11">11</a>
</span><span class="lnt" id="hl-0-12"><a class="lnlinks" href="#hl-0-12">12</a>
</span><span class="lnt" id="hl-0-13"><a class="lnlinks" href="#hl-0-13">13</a>
</span><span class="lnt" id="hl-0-14"><a class="lnlinks" href="#hl-0-14">14</a>
</span><span class="lnt" id="hl-0-15"><a class="lnlinks" href="#hl-0-15">15</a>
</span><span class="lnt" id="hl-0-16"><a class="lnlinks" href="#hl-0-16">16</a>
</span><span class="lnt" id="hl-0-17"><a class="lnlinks" href="#hl-0-17">17</a>
</span><span class="lnt" id="hl-0-18"><a class="lnlinks" href="#hl-0-18">18</a>
</span><span class="lnt" id="hl-0-19"><a class="lnlinks" href="#hl-0-19">19</a>
</span><span class="lnt" id="hl-0-20"><a class="lnlinks" href="#hl-0-20">20</a>
</span><span class="lnt" id="hl-0-21"><a class="lnlinks" href="#hl-0-21">21</a>
</span><span class="lnt" id="hl-0-22"><a class="lnlinks" href="#hl-0-22">22</a>
</span><span class="lnt" id="hl-0-23"><a class="lnlinks" href="#hl-0-23">23</a>
</span><span class="lnt" id="hl-0-24"><a class="lnlinks" href="#hl-0-24">24</a>
</span><span class="lnt" id="hl-0-25"><a class="lnlinks" href="#hl-0-25">25</a>
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">class Solution {
</span></span><span class="line"><span class="cl">public:
</span></span><span class="line"><span class="cl">	bool isPossibleDivide(vector&lt;int&gt;&amp; nums, int k) {
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		int n = nums.size();
</span></span><span class="line"><span class="cl">		if (n % k != 0) return false;
</span></span><span class="line"><span class="cl">		int ssize = n/k;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		map&lt;int, int&gt;hm;
</span></span><span class="line"><span class="cl">		for (int i = 0; i &lt; n; i++)
</span></span><span class="line"><span class="cl">			hm[nums[i]]++;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		for (auto it = hm.begin(); it != hm.end(); it++) {
</span></span><span class="line"><span class="cl">			if (hm[it-&gt;first] &gt; 0) {
</span></span><span class="line"><span class="cl">				for (int i = k-1; i &gt;= 0; i--) {
</span></span><span class="line"><span class="cl">					hm[it-&gt;first+i] -= hm[it-&gt;first];
</span></span><span class="line"><span class="cl">					if (hm[it-&gt;first+i] &lt; 0)
</span></span><span class="line"><span class="cl">						return false;
</span></span><span class="line"><span class="cl">				}
</span></span><span class="line"><span class="cl">			}
</span></span><span class="line"><span class="cl">		}
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		return true;
</span></span><span class="line"><span class="cl">	}
</span></span><span class="line"><span class="cl">};
</span></span></code></pre></td></tr></table>
</div>
</div><p><a href="https://leetcode.com/problems/car-pooling/">https://leetcode.com/problems/car-pooling/</a></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt" id="hl-1-1"><a class="lnlinks" href="#hl-1-1"> 1</a>
</span><span class="lnt" id="hl-1-2"><a class="lnlinks" href="#hl-1-2"> 2</a>
</span><span class="lnt" id="hl-1-3"><a class="lnlinks" href="#hl-1-3"> 3</a>
</span><span class="lnt" id="hl-1-4"><a class="lnlinks" href="#hl-1-4"> 4</a>
</span><span class="lnt" id="hl-1-5"><a class="lnlinks" href="#hl-1-5"> 5</a>
</span><span class="lnt" id="hl-1-6"><a class="lnlinks" href="#hl-1-6"> 6</a>
</span><span class="lnt" id="hl-1-7"><a class="lnlinks" href="#hl-1-7"> 7</a>
</span><span class="lnt" id="hl-1-8"><a class="lnlinks" href="#hl-1-8"> 8</a>
</span><span class="lnt" id="hl-1-9"><a class="lnlinks" href="#hl-1-9"> 9</a>
</span><span class="lnt" id="hl-1-10"><a class="lnlinks" href="#hl-1-10">10</a>
</span><span class="lnt" id="hl-1-11"><a class="lnlinks" href="#hl-1-11">11</a>
</span><span class="lnt" id="hl-1-12"><a class="lnlinks" href="#hl-1-12">12</a>
</span><span class="lnt" id="hl-1-13"><a class="lnlinks" href="#hl-1-13">13</a>
</span><span class="lnt" id="hl-1-14"><a class="lnlinks" href="#hl-1-14">14</a>
</span><span class="lnt" id="hl-1-15"><a class="lnlinks" href="#hl-1-15">15</a>
</span><span class="lnt" id="hl-1-16"><a class="lnlinks" href="#hl-1-16">16</a>
</span><span class="lnt" id="hl-1-17"><a class="lnlinks" href="#hl-1-17">17</a>
</span><span class="lnt" id="hl-1-18"><a class="lnlinks" href="#hl-1-18">18</a>
</span><span class="lnt" id="hl-1-19"><a class="lnlinks" href="#hl-1-19">19</a>
</span><span class="lnt" id="hl-1-20"><a class="lnlinks" href="#hl-1-20">20</a>
</span><span class="lnt" id="hl-1-21"><a class="lnlinks" href="#hl-1-21">21</a>
</span><span class="lnt" id="hl-1-22"><a class="lnlinks" href="#hl-1-22">22</a>
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">class Solution {
</span></span><span class="line"><span class="cl">public:
</span></span><span class="line"><span class="cl">	bool carPooling(vector&lt;vector&lt;int&gt;&gt;&amp; trips, int capacity) {
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		int trip_len = 1001;
</span></span><span class="line"><span class="cl">		vector&lt;int&gt;stops(trip_len, 0);
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		for (int i = 0; i &lt; trips.size(); i++) {
</span></span><span class="line"><span class="cl">			stops[trips[i][1]] += trips[i][0];
</span></span><span class="line"><span class="cl">			stops[trips[i][2]] -= trips[i][0];
</span></span><span class="line"><span class="cl">		}
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		for (int i = 0; i &lt; trip_len; i++) {
</span></span><span class="line"><span class="cl">			if (i != 0) stops[i] += stops[i-1];
</span></span><span class="line"><span class="cl">			if (stops[i] &gt; capacity)
</span></span><span class="line"><span class="cl">				return false;
</span></span><span class="line"><span class="cl">		}
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		return true;
</span></span><span class="line"><span class="cl">	}
</span></span><span class="line"><span class="cl">};
</span></span></code></pre></td></tr></table>
</div>
</div><p><a href="https://leetcode.com/problems/reorganize-string/">https://leetcode.com/problems/reorganize-string/</a></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt" id="hl-2-1"><a class="lnlinks" href="#hl-2-1"> 1</a>
</span><span class="lnt" id="hl-2-2"><a class="lnlinks" href="#hl-2-2"> 2</a>
</span><span class="lnt" id="hl-2-3"><a class="lnlinks" href="#hl-2-3"> 3</a>
</span><span class="lnt" id="hl-2-4"><a class="lnlinks" href="#hl-2-4"> 4</a>
</span><span class="lnt" id="hl-2-5"><a class="lnlinks" href="#hl-2-5"> 5</a>
</span><span class="lnt" id="hl-2-6"><a class="lnlinks" href="#hl-2-6"> 6</a>
</span><span class="lnt" id="hl-2-7"><a class="lnlinks" href="#hl-2-7"> 7</a>
</span><span class="lnt" id="hl-2-8"><a class="lnlinks" href="#hl-2-8"> 8</a>
</span><span class="lnt" id="hl-2-9"><a class="lnlinks" href="#hl-2-9"> 9</a>
</span><span class="lnt" id="hl-2-10"><a class="lnlinks" href="#hl-2-10">10</a>
</span><span class="lnt" id="hl-2-11"><a class="lnlinks" href="#hl-2-11">11</a>
</span><span class="lnt" id="hl-2-12"><a class="lnlinks" href="#hl-2-12">12</a>
</span><span class="lnt" id="hl-2-13"><a class="lnlinks" href="#hl-2-13">13</a>
</span><span class="lnt" id="hl-2-14"><a class="lnlinks" href="#hl-2-14">14</a>
</span><span class="lnt" id="hl-2-15"><a class="lnlinks" href="#hl-2-15">15</a>
</span><span class="lnt" id="hl-2-16"><a class="lnlinks" href="#hl-2-16">16</a>
</span><span class="lnt" id="hl-2-17"><a class="lnlinks" href="#hl-2-17">17</a>
</span><span class="lnt" id="hl-2-18"><a class="lnlinks" href="#hl-2-18">18</a>
</span><span class="lnt" id="hl-2-19"><a class="lnlinks" href="#hl-2-19">19</a>
</span><span class="lnt" id="hl-2-20"><a class="lnlinks" href="#hl-2-20">20</a>
</span><span class="lnt" id="hl-2-21"><a class="lnlinks" href="#hl-2-21">21</a>
</span><span class="lnt" id="hl-2-22"><a class="lnlinks" href="#hl-2-22">22</a>
</span><span class="lnt" id="hl-2-23"><a class="lnlinks" href="#hl-2-23">23</a>
</span><span class="lnt" id="hl-2-24"><a class="lnlinks" href="#hl-2-24">24</a>
</span><span class="lnt" id="hl-2-25"><a class="lnlinks" href="#hl-2-25">25</a>
</span><span class="lnt" id="hl-2-26"><a class="lnlinks" href="#hl-2-26">26</a>
</span><span class="lnt" id="hl-2-27"><a class="lnlinks" href="#hl-2-27">27</a>
</span><span class="lnt" id="hl-2-28"><a class="lnlinks" href="#hl-2-28">28</a>
</span><span class="lnt" id="hl-2-29"><a class="lnlinks" href="#hl-2-29">29</a>
</span><span class="lnt" id="hl-2-30"><a class="lnlinks" href="#hl-2-30">30</a>
</span><span class="lnt" id="hl-2-31"><a class="lnlinks" href="#hl-2-31">31</a>
</span><span class="lnt" id="hl-2-32"><a class="lnlinks" href="#hl-2-32">32</a>
</span><span class="lnt" id="hl-2-33"><a class="lnlinks" href="#hl-2-33">33</a>
</span><span class="lnt" id="hl-2-34"><a class="lnlinks" href="#hl-2-34">34</a>
</span><span class="lnt" id="hl-2-35"><a class="lnlinks" href="#hl-2-35">35</a>
</span><span class="lnt" id="hl-2-36"><a class="lnlinks" href="#hl-2-36">36</a>
</span><span class="lnt" id="hl-2-37"><a class="lnlinks" href="#hl-2-37">37</a>
</span><span class="lnt" id="hl-2-38"><a class="lnlinks" href="#hl-2-38">38</a>
</span><span class="lnt" id="hl-2-39"><a class="lnlinks" href="#hl-2-39">39</a>
</span><span class="lnt" id="hl-2-40"><a class="lnlinks" href="#hl-2-40">40</a>
</span><span class="lnt" id="hl-2-41"><a class="lnlinks" href="#hl-2-41">41</a>
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">class Solution {
</span></span><span class="line"><span class="cl">	static bool compare(pair&lt;char, int&gt;p1, pair&lt;char, int&gt;p2) {
</span></span><span class="line"><span class="cl">		return p1.second &gt; p2.second;
</span></span><span class="line"><span class="cl">	}
</span></span><span class="line"><span class="cl">public:
</span></span><span class="line"><span class="cl">	string reorganizeString(string S) {
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		int n = S.length();
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		unordered_map&lt;char, int&gt;m;
</span></span><span class="line"><span class="cl">		vector&lt;pair&lt;char, int&gt;&gt;v;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		for (int i = 0; i &lt; n; i++) 
</span></span><span class="line"><span class="cl">			m[S[i]]++;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		for(auto it = m.begin(); it != m.end(); it++) {
</span></span><span class="line"><span class="cl">			if (it-&gt;second &gt; (n+1)/2)
</span></span><span class="line"><span class="cl">				return &#34;&#34;;
</span></span><span class="line"><span class="cl">			v.push_back(make_pair(it-&gt;first, it-&gt;second));
</span></span><span class="line"><span class="cl">		}
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		sort(v.begin(), v.end(), compare);
</span></span><span class="line"><span class="cl">		string str;
</span></span><span class="line"><span class="cl">		for (int i = 0; i &lt; v.size(); i++) {
</span></span><span class="line"><span class="cl">			while (v[i].second--)
</span></span><span class="line"><span class="cl">				str += v[i].first;
</span></span><span class="line"><span class="cl">		}
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		string ans;
</span></span><span class="line"><span class="cl">		int size = str.size();
</span></span><span class="line"><span class="cl">		int i = 0, j = (size-1)/2+1;
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		while (i &lt; (size-1)/2+1) {
</span></span><span class="line"><span class="cl">			ans += str[i];
</span></span><span class="line"><span class="cl">			ans += str[j];
</span></span><span class="line"><span class="cl">			i++; j++;
</span></span><span class="line"><span class="cl">		}
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		return ans;
</span></span><span class="line"><span class="cl">	}
</span></span><span class="line"><span class="cl">};
</span></span></code></pre></td></tr></table>
</div>
</div><p><a href="https://leetcode.com/problems/candy/">https://leetcode.com/problems/candy/</a></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt" id="hl-3-1"><a class="lnlinks" href="#hl-3-1"> 1</a>
</span><span class="lnt" id="hl-3-2"><a class="lnlinks" href="#hl-3-2"> 2</a>
</span><span class="lnt" id="hl-3-3"><a class="lnlinks" href="#hl-3-3"> 3</a>
</span><span class="lnt" id="hl-3-4"><a class="lnlinks" href="#hl-3-4"> 4</a>
</span><span class="lnt" id="hl-3-5"><a class="lnlinks" href="#hl-3-5"> 5</a>
</span><span class="lnt" id="hl-3-6"><a class="lnlinks" href="#hl-3-6"> 6</a>
</span><span class="lnt" id="hl-3-7"><a class="lnlinks" href="#hl-3-7"> 7</a>
</span><span class="lnt" id="hl-3-8"><a class="lnlinks" href="#hl-3-8"> 8</a>
</span><span class="lnt" id="hl-3-9"><a class="lnlinks" href="#hl-3-9"> 9</a>
</span><span class="lnt" id="hl-3-10"><a class="lnlinks" href="#hl-3-10">10</a>
</span><span class="lnt" id="hl-3-11"><a class="lnlinks" href="#hl-3-11">11</a>
</span><span class="lnt" id="hl-3-12"><a class="lnlinks" href="#hl-3-12">12</a>
</span><span class="lnt" id="hl-3-13"><a class="lnlinks" href="#hl-3-13">13</a>
</span><span class="lnt" id="hl-3-14"><a class="lnlinks" href="#hl-3-14">14</a>
</span><span class="lnt" id="hl-3-15"><a class="lnlinks" href="#hl-3-15">15</a>
</span><span class="lnt" id="hl-3-16"><a class="lnlinks" href="#hl-3-16">16</a>
</span><span class="lnt" id="hl-3-17"><a class="lnlinks" href="#hl-3-17">17</a>
</span><span class="lnt" id="hl-3-18"><a class="lnlinks" href="#hl-3-18">18</a>
</span><span class="lnt" id="hl-3-19"><a class="lnlinks" href="#hl-3-19">19</a>
</span><span class="lnt" id="hl-3-20"><a class="lnlinks" href="#hl-3-20">20</a>
</span><span class="lnt" id="hl-3-21"><a class="lnlinks" href="#hl-3-21">21</a>
</span><span class="lnt" id="hl-3-22"><a class="lnlinks" href="#hl-3-22">22</a>
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback"><span class="line"><span class="cl">class Solution {
</span></span><span class="line"><span class="cl">public:
</span></span><span class="line"><span class="cl">	int candy(vector&lt;int&gt;&amp; ratings) {
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		int n = ratings.size();
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		vector&lt;int&gt;left(n, 1); 
</span></span><span class="line"><span class="cl">		for (int i = 1; i &lt; n; i++) {
</span></span><span class="line"><span class="cl">			if (ratings[i] &gt; ratings[i-1])
</span></span><span class="line"><span class="cl">				left[i] = left[i-1]+1;
</span></span><span class="line"><span class="cl">		}
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		int sum = left[n-1];
</span></span><span class="line"><span class="cl">		for (int i = n-2; i &gt;= 0; i--) {
</span></span><span class="line"><span class="cl">			if (ratings[i] &gt; ratings[i+1])
</span></span><span class="line"><span class="cl">				left[i] = max(left[i], left[i+1]+1);
</span></span><span class="line"><span class="cl">			sum += left[i];
</span></span><span class="line"><span class="cl">		}
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">		return sum;
</span></span><span class="line"><span class="cl">	}
</span></span><span class="line"><span class="cl">};
</span></span></code></pre></td></tr></table>
</div>
</div>]]></content:encoded>
    </item>
  </channel>
</rss>
