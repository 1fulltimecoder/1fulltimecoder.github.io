<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>project on Samir Paul</title>
    <link>https://samirpaulb.github.io/tags/project/</link>
    <description>Recent content in project on Samir Paul</description>
    <image>
      <title>Samir Paul</title>
      <url>https://spcdn.pages.dev/blog-featured-image-samirpaul-in-blog.webp</url>
      <link>https://spcdn.pages.dev/blog-featured-image-samirpaul-in-blog.webp</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 20 Jul 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://samirpaulb.github.io/tags/project/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Online PDF Compression Tool</title>
      <link>https://samirpaulb.github.io/posts/online-pdf-compression-tool/</link>
      <pubDate>Thu, 20 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://samirpaulb.github.io/posts/online-pdf-compression-tool/</guid>
      <description>Online PDF Compression Tool</description>
      <content:encoded><![CDATA[<h3 id="about-the-project">About The Project:</h3>
<p>An online PDF file compression tool to reduce the size of a .pdf file. Python Flask is used to upload the file to a temporary location on the server.
In the backend, using the <code>PDFNetPython</code> library that file gets reduced and saved to its final location. After download, the files are automatically deleted from the server after 1 hour. Technologies used in this project: <code>Python3</code>, <code>Flask</code>, <code>C</code>, <code>Shell</code>, <code>Nix</code>, <code>Replit</code>, <code>Git</code>, <code>HTML</code>, <code>CSS</code>, <code>JavaScript</code>.</p>
<ul>
<li><a href="https://filecompressor.samirpaul.repl.co">Live Demo ðŸš€ </a></li>
</ul>
<h2 id="video-demo">Video Demo:</h2>
<iframe title="Video Demo" src="https://user-images.githubusercontent.com/77569653/172896703-9e4998c1-40da-46ae-810e-780e47a391f9.mp4" loading="lazy" width="100%" height = "380" autoplay="autoplay" loop="loop" frameborder="0" allowfullscreen></iframe>
<ul>
<li>Landing Page:
<img loading="lazy" src="https://spcdn.pages.dev/assets/img/filecompressor-samirpaul1-repl-co-landing-page.webp" alt="Landing Page"  />
</li>
</ul>
<h3 id="flask-file-uploading">Flask File Uploading:</h3>
<p>In HTML form, the enctype property is set to <code>&quot;multipart/form-data&quot;</code> to publish the file to the URL.The URL handler extracts the file from the <code>request.files []</code> object and saves it to the required location. The path to the upload folder is defined as <code>app.config['UPLOAD_FOLDER']</code> and maximum size (in bytes) as
<code>maximum size (in bytes)</code>.
The server-side flask script fetches the file from the request object using <code>name = request.files['file'].filename</code>.
On successfully uploading the file, it is saved to the desired location on the server.
Hereâ€™s the Python code for the Flask application.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt" id="hl-0-1"><a class="lnlinks" href="#hl-0-1"> 1</a>
</span><span class="lnt" id="hl-0-2"><a class="lnlinks" href="#hl-0-2"> 2</a>
</span><span class="lnt" id="hl-0-3"><a class="lnlinks" href="#hl-0-3"> 3</a>
</span><span class="lnt" id="hl-0-4"><a class="lnlinks" href="#hl-0-4"> 4</a>
</span><span class="lnt" id="hl-0-5"><a class="lnlinks" href="#hl-0-5"> 5</a>
</span><span class="lnt" id="hl-0-6"><a class="lnlinks" href="#hl-0-6"> 6</a>
</span><span class="lnt" id="hl-0-7"><a class="lnlinks" href="#hl-0-7"> 7</a>
</span><span class="lnt" id="hl-0-8"><a class="lnlinks" href="#hl-0-8"> 8</a>
</span><span class="lnt" id="hl-0-9"><a class="lnlinks" href="#hl-0-9"> 9</a>
</span><span class="lnt" id="hl-0-10"><a class="lnlinks" href="#hl-0-10">10</a>
</span><span class="lnt" id="hl-0-11"><a class="lnlinks" href="#hl-0-11">11</a>
</span><span class="lnt" id="hl-0-12"><a class="lnlinks" href="#hl-0-12">12</a>
</span><span class="lnt" id="hl-0-13"><a class="lnlinks" href="#hl-0-13">13</a>
</span><span class="lnt" id="hl-0-14"><a class="lnlinks" href="#hl-0-14">14</a>
</span><span class="lnt" id="hl-0-15"><a class="lnlinks" href="#hl-0-15">15</a>
</span><span class="lnt" id="hl-0-16"><a class="lnlinks" href="#hl-0-16">16</a>
</span><span class="lnt" id="hl-0-17"><a class="lnlinks" href="#hl-0-17">17</a>
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Flask</span><span class="p">,</span> <span class="n">render_template</span><span class="p">,</span> <span class="n">request</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">werkzeug</span> <span class="kn">import</span> <span class="n">secure_filename</span>
</span></span><span class="line"><span class="cl"><span class="n">app</span> <span class="o">=</span> <span class="n">Flask</span><span class="p">(</span><span class="vm">__name__</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nd">@app.route</span><span class="p">(</span><span class="s1">&#39;/upload&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">upload_file</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">   <span class="k">return</span> <span class="n">render_template</span><span class="p">(</span><span class="s1">&#39;upload.html&#39;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	
</span></span><span class="line"><span class="cl"><span class="nd">@app.route</span><span class="p">(</span><span class="s1">&#39;/uploader&#39;</span><span class="p">,</span> <span class="n">methods</span> <span class="o">=</span> <span class="p">[</span><span class="s1">&#39;GET&#39;</span><span class="p">,</span> <span class="s1">&#39;POST&#39;</span><span class="p">])</span>
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">upload_file</span><span class="p">():</span>
</span></span><span class="line"><span class="cl">   <span class="k">if</span> <span class="n">request</span><span class="o">.</span><span class="n">method</span> <span class="o">==</span> <span class="s1">&#39;POST&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">      <span class="n">f</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="n">files</span><span class="p">[</span><span class="s1">&#39;file&#39;</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">      <span class="n">f</span><span class="o">.</span><span class="n">save</span><span class="p">(</span><span class="n">secure_filename</span><span class="p">(</span><span class="n">f</span><span class="o">.</span><span class="n">filename</span><span class="p">))</span>
</span></span><span class="line"><span class="cl">      <span class="k">return</span> <span class="s1">&#39;file uploaded successfully&#39;</span>
</span></span><span class="line"><span class="cl">		
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s1">&#39;__main__&#39;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">   <span class="n">app</span><span class="o">.</span><span class="n">run</span><span class="p">(</span><span class="n">debug</span> <span class="o">=</span> <span class="kc">True</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="how-pdf-is-compressed-in-backend">How PDF is compressed in backend:</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt" id="hl-1-1"><a class="lnlinks" href="#hl-1-1"> 1</a>
</span><span class="lnt" id="hl-1-2"><a class="lnlinks" href="#hl-1-2"> 2</a>
</span><span class="lnt" id="hl-1-3"><a class="lnlinks" href="#hl-1-3"> 3</a>
</span><span class="lnt" id="hl-1-4"><a class="lnlinks" href="#hl-1-4"> 4</a>
</span><span class="lnt" id="hl-1-5"><a class="lnlinks" href="#hl-1-5"> 5</a>
</span><span class="lnt" id="hl-1-6"><a class="lnlinks" href="#hl-1-6"> 6</a>
</span><span class="lnt" id="hl-1-7"><a class="lnlinks" href="#hl-1-7"> 7</a>
</span><span class="lnt" id="hl-1-8"><a class="lnlinks" href="#hl-1-8"> 8</a>
</span><span class="lnt" id="hl-1-9"><a class="lnlinks" href="#hl-1-9"> 9</a>
</span><span class="lnt" id="hl-1-10"><a class="lnlinks" href="#hl-1-10">10</a>
</span><span class="lnt" id="hl-1-11"><a class="lnlinks" href="#hl-1-11">11</a>
</span><span class="lnt" id="hl-1-12"><a class="lnlinks" href="#hl-1-12">12</a>
</span><span class="lnt" id="hl-1-13"><a class="lnlinks" href="#hl-1-13">13</a>
</span><span class="lnt" id="hl-1-14"><a class="lnlinks" href="#hl-1-14">14</a>
</span><span class="lnt" id="hl-1-15"><a class="lnlinks" href="#hl-1-15">15</a>
</span><span class="lnt" id="hl-1-16"><a class="lnlinks" href="#hl-1-16">16</a>
</span><span class="lnt" id="hl-1-17"><a class="lnlinks" href="#hl-1-17">17</a>
</span><span class="lnt" id="hl-1-18"><a class="lnlinks" href="#hl-1-18">18</a>
</span><span class="lnt" id="hl-1-19"><a class="lnlinks" href="#hl-1-19">19</a>
</span><span class="lnt" id="hl-1-20"><a class="lnlinks" href="#hl-1-20">20</a>
</span><span class="lnt" id="hl-1-21"><a class="lnlinks" href="#hl-1-21">21</a>
</span><span class="lnt" id="hl-1-22"><a class="lnlinks" href="#hl-1-22">22</a>
</span><span class="lnt" id="hl-1-23"><a class="lnlinks" href="#hl-1-23">23</a>
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">os</span>
</span></span><span class="line"><span class="cl"><span class="kn">import</span> <span class="nn">sys</span>
</span></span><span class="line"><span class="cl"><span class="kn">from</span> <span class="nn">PDFNetPython3.PDFNetPython</span> <span class="kn">import</span> <span class="n">PDFDoc</span><span class="p">,</span> <span class="n">Optimizer</span><span class="p">,</span> <span class="n">SDFDoc</span><span class="p">,</span> <span class="n">PDFNet</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">def</span> <span class="nf">compress_file</span><span class="p">(</span><span class="n">input_file</span><span class="p">:</span> <span class="nb">str</span><span class="p">,</span> <span class="n">output_file</span><span class="p">:</span> <span class="nb">str</span><span class="p">):</span>
</span></span><span class="line"><span class="cl">    <span class="k">if</span> <span class="ow">not</span> <span class="n">output_file</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">output_file</span> <span class="o">=</span> <span class="n">input_file</span>
</span></span><span class="line"><span class="cl">    <span class="k">try</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">PDFNet</span><span class="o">.</span><span class="n">Initialize</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="n">doc</span> <span class="o">=</span> <span class="n">PDFDoc</span><span class="p">(</span><span class="n">input_file</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">doc</span><span class="o">.</span><span class="n">InitSecurityHandler</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="n">Optimizer</span><span class="o">.</span><span class="n">Optimize</span><span class="p">(</span><span class="n">doc</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">doc</span><span class="o">.</span><span class="n">Save</span><span class="p">(</span><span class="n">output_file</span><span class="p">,</span> <span class="n">SDFDoc</span><span class="o">.</span><span class="n">e_linearized</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="n">doc</span><span class="o">.</span><span class="n">Close</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">    <span class="k">except</span> <span class="ne">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">        <span class="n">doc</span><span class="o">.</span><span class="n">Close</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">        <span class="k">return</span> <span class="kc">False</span>
</span></span><span class="line"><span class="cl">    <span class="k">return</span> <span class="kc">True</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="k">if</span> <span class="vm">__name__</span> <span class="o">==</span> <span class="s2">&#34;__main__&#34;</span><span class="p">:</span>
</span></span><span class="line"><span class="cl">    <span class="n">input_file</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="n">output_file</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">argv</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span>
</span></span><span class="line"><span class="cl">    <span class="n">compress_file</span><span class="p">(</span><span class="n">input_file</span><span class="p">,</span> <span class="n">output_file</span><span class="p">)</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h3 id="file-download">File Download:</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt" id="hl-2-1"><a class="lnlinks" href="#hl-2-1"> 1</a>
</span><span class="lnt" id="hl-2-2"><a class="lnlinks" href="#hl-2-2"> 2</a>
</span><span class="lnt" id="hl-2-3"><a class="lnlinks" href="#hl-2-3"> 3</a>
</span><span class="lnt" id="hl-2-4"><a class="lnlinks" href="#hl-2-4"> 4</a>
</span><span class="lnt" id="hl-2-5"><a class="lnlinks" href="#hl-2-5"> 5</a>
</span><span class="lnt" id="hl-2-6"><a class="lnlinks" href="#hl-2-6"> 6</a>
</span><span class="lnt" id="hl-2-7"><a class="lnlinks" href="#hl-2-7"> 7</a>
</span><span class="lnt" id="hl-2-8"><a class="lnlinks" href="#hl-2-8"> 8</a>
</span><span class="lnt" id="hl-2-9"><a class="lnlinks" href="#hl-2-9"> 9</a>
</span><span class="lnt" id="hl-2-10"><a class="lnlinks" href="#hl-2-10">10</a>
</span><span class="lnt" id="hl-2-11"><a class="lnlinks" href="#hl-2-11">11</a>
</span><span class="lnt" id="hl-2-12"><a class="lnlinks" href="#hl-2-12">12</a>
</span><span class="lnt" id="hl-2-13"><a class="lnlinks" href="#hl-2-13">13</a>
</span><span class="lnt" id="hl-2-14"><a class="lnlinks" href="#hl-2-14">14</a>
</span><span class="lnt" id="hl-2-15"><a class="lnlinks" href="#hl-2-15">15</a>
</span><span class="lnt" id="hl-2-16"><a class="lnlinks" href="#hl-2-16">16</a>
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-js" data-lang="js"><span class="line"><span class="cl"><span class="kd">function</span> <span class="nx">downloadFile</span><span class="p">(</span><span class="nx">filename</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	<span class="k">if</span><span class="p">(</span><span class="nx">response</span> <span class="o">!==</span> <span class="kc">null</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">		<span class="nx">fname</span> <span class="o">=</span> <span class="nx">response</span><span class="p">.</span><span class="nx">filename</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	  <span class="kd">var</span> <span class="nx">url</span> <span class="o">=</span> <span class="s2">&#34;static/resource/&#34;</span> <span class="o">+</span> <span class="nx">fname</span><span class="p">.</span><span class="nx">toString</span><span class="p">(</span><span class="mi">2</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">url</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	    <span class="nx">fetch</span><span class="p">(</span><span class="nx">url</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">	    <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">response</span> <span class="p">=&gt;</span> <span class="nx">response</span><span class="p">.</span><span class="nx">blob</span><span class="p">())</span>
</span></span><span class="line"><span class="cl">	    <span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="nx">blob</span> <span class="p">=&gt;</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">	      <span class="kr">const</span> <span class="nx">link</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&#34;a&#34;</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	      <span class="nx">link</span><span class="p">.</span><span class="nx">href</span> <span class="o">=</span> <span class="nx">URL</span><span class="p">.</span><span class="nx">createObjectURL</span><span class="p">(</span><span class="nx">blob</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	      <span class="nx">link</span><span class="p">.</span><span class="nx">download</span> <span class="o">=</span> <span class="nx">fname</span><span class="p">;</span>
</span></span><span class="line"><span class="cl">	      <span class="nx">link</span><span class="p">.</span><span class="nx">click</span><span class="p">();</span>
</span></span><span class="line"><span class="cl">	  <span class="p">})</span>
</span></span><span class="line"><span class="cl">	  <span class="p">.</span><span class="k">catch</span><span class="p">(</span><span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">);</span>
</span></span><span class="line"><span class="cl">	<span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><h2 id="-how-to-contribute">ðŸ¤” How to contribute</h2>
<ul>
<li><input checked="" disabled="" type="checkbox"> Fork this repository;</li>
<li><input checked="" disabled="" type="checkbox"> Create a branch with your feature: <code>git checkout -b my-feature</code>;</li>
<li><input checked="" disabled="" type="checkbox"> Commit your changes: <code>git commit -m &quot;feat: my new feature&quot;</code>;</li>
<li><input checked="" disabled="" type="checkbox"> Push to your branch: <code>git push origin my-feature</code>.</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Text File Compressor De-compressor Web App</title>
      <link>https://samirpaulb.github.io/posts/text-file-compressor-de-compressor-web-app/</link>
      <pubDate>Sun, 12 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://samirpaulb.github.io/posts/text-file-compressor-de-compressor-web-app/</guid>
      <description>Text File Compressor De-compressor Web App</description>
      <content:encoded><![CDATA[<ul>
<li>This webapp uses Huffman Coding for Text Compression and De-compression.</li>
<li>Made with <code>JavaScript</code>, <code>HTML5</code> and <code>CSS3</code>.</li>
<li>Live Demo: <a href="https://samirpaulb.github.io/txt-compressor/"><strong>samirpaulb.github.io/txt-compressor</strong></a></li>
<li>Repository: <a href="https://github.com/SamirPaulb/txt-compressor">github.com/SamirPaulb/txt-compressor</a></li>
</ul>
<h2 id="about-this-application">About this application:</h2>
<ul>
<li>An online text(.txt) file compressor, decompressor which uses Huffman Algorithm to encode/compress files by 35% and decode them back to the original size.</li>
<li>This tool assigns a variable-length code to the characters of the uploaded file based on the frequency of occurrence. Then converts characters to that special code which takes less size than the original ASCII codes. Huffman code forms a binary tree assigning the most frequent characters with the smallest codes and longer codes for the least frequent characters.</li>
<li>A Huffman code is a tree, built bottom up, starting with the list of different characters appearing in a text and their frequency.</li>
<li>With this lossless data compression method, this tool can compress the file size by 35 to 40%.</li>
<li>As file size gets reduced and original characters get changed to special characters so this encoding also improves security by encrypting the file during file sharing.</li>
<li>With the decoding feature, the user can decode the encoded file and get back the original file of the previous size.</li>
<li>I have used JavaScript to implement the algorithms so that browser can compile the code and HTML, CSS to make the website responsive.</li>
<li>Additional instructions and warnings are provided if steps are not followed correctly.</li>
<li>An <a href="https://samirpaulb.github.io/txt-compressor/info.html">Info page</a> is added to give more information about tecnique of <strong>Lossless Data Compression</strong> with Huffman coding.</li>
</ul>
<h2 id="video-demo">Video Demo:</h2>
<iframe title="Video Demo" src="https://user-images.githubusercontent.com/77569653/172716965-50560f4a-2acf-4013-ae87-8b474b2a09e3.mp4" loading="lazy" width="100%" height = "380" autoplay="autoplay" loop="loop" frameborder="0" allowfullscreen></iframe>
<ul>
<li><input checked="" disabled="" type="checkbox"> Landing Page:</li>
</ul>
<p><img loading="lazy" src="https://spcdn.pages.dev/assets/img/text-file-compressor-de-compressor-web-app-landing-page.png" alt="landing-page"  />
</p>
<ul>
<li><input checked="" disabled="" type="checkbox"> Upload File</li>
</ul>
<p><img loading="lazy" src="https://spcdn.pages.dev/assets/img/text-file-compressor-de-compressor-web-app-step1.png" alt="step1"  />
</p>
<ul>
<li><input checked="" disabled="" type="checkbox"> Select Action (Compress / De-compress)</li>
</ul>
<p><img loading="lazy" src="https://spcdn.pages.dev/assets/img/text-file-compressor-de-compressor-web-app-step2.png" alt="step2"  />
</p>
<ul>
<li>
<p><input checked="" disabled="" type="checkbox"> Wait for File Download</p>
<ul>
<li>
<p>File gets downloaded automatically when selected process is complete.</p>
</li>
<li>
<p>Compression - Compression Ratio is also displayed</p>
</li>
</ul>
<p><img loading="lazy" src="https://spcdn.pages.dev/assets/img/text-file-compressor-de-compressor-web-app-step3.png" alt="compression"  />
</p>
<ul>
<li>De-compression</li>
</ul>
<p><img loading="lazy" src="https://spcdn.pages.dev/assets/img/text-file-compressor-de-compressor-web-app-decompression.png" alt="decompression"  />
</p>
</li>
<li>
<p>Additional Instructions and Warnings are provided if the above steps are not followed correctly</p>
</li>
</ul>
<p><img loading="lazy" src="https://spcdn.pages.dev/assets/img/text-file-compressor-de-compressor-web-app-nofile.png" alt="noFile"  />
</p>
<p><img loading="lazy" src="https://spcdn.pages.dev/assets/img/text-file-compressor-de-compressor-web-app-verysmallfile.png" alt="smallFile"  />
</p>
<ul>
<li>About the tecnique of Lossless Data Compression with Huffman coding.</li>
</ul>
<p><img loading="lazy" src="https://spcdn.pages.dev/assets/img/text-file-compressor-de-compressor-web-app-info.jpeg" alt="info1"  />
</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
